"""org academica + docentes + asig

Revision ID: 9d1f2afd53be
Revises: a56402aeb7fe
Create Date: 2025-09-13 03:18:52.063373

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9d1f2afd53be'
down_revision: Union[str, Sequence[str], None] = 'a56402aeb7fe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('asignacion_docente', sa.Column('gestion_id', sa.Integer(), nullable=False))
    op.add_column('asignacion_docente', sa.Column('docente_id', sa.Integer(), nullable=False))
    op.add_column('asignacion_docente', sa.Column('curso_id', sa.Integer(), nullable=False))
    op.add_column('asignacion_docente', sa.Column('paralelo_id', sa.Integer(), nullable=False))
    op.add_column('asignacion_docente', sa.Column('materia_id', sa.Integer(), nullable=False))
    op.create_unique_constraint('uq_asig', 'asignacion_docente', ['gestion_id', 'docente_id', 'curso_id', 'paralelo_id', 'materia_id'])
    op.create_foreign_key(None, 'asignacion_docente', 'gestion', ['gestion_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'asignacion_docente', 'docentes', ['docente_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'asignacion_docente', 'paralelos', ['paralelo_id'], ['id'])
    op.create_foreign_key(None, 'asignacion_docente', 'materias', ['materia_id'], ['id'])
    op.create_foreign_key(None, 'asignacion_docente', 'cursos', ['curso_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'asignacion_docente', type_='foreignkey')
    op.drop_constraint(None, 'asignacion_docente', type_='foreignkey')
    op.drop_constraint(None, 'asignacion_docente', type_='foreignkey')
    op.drop_constraint(None, 'asignacion_docente', type_='foreignkey')
    op.drop_constraint(None, 'asignacion_docente', type_='foreignkey')
    op.drop_constraint('uq_asig', 'asignacion_docente', type_='unique')
    op.drop_column('asignacion_docente', 'materia_id')
    op.drop_column('asignacion_docente', 'paralelo_id')
    op.drop_column('asignacion_docente', 'curso_id')
    op.drop_column('asignacion_docente', 'docente_id')
    op.drop_column('asignacion_docente', 'gestion_id')
    # ### end Alembic commands ###
